{"version":3,"sources":["components/StorePicker.js","components/Header.js","helpers.js","components/Order.js","components/AddItemForm.js","components/EditItemForm.js","components/Login.js","base.js","components/Inventory.js","sample-items.js","components/Item.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","Component","Header","formatPrice","cents","toLocaleString","style","currency","Order","renderOrder","key","item","items","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","component","map","AddItemForm","nameRef","priceRef","statusRef","descRef","imageRef","createItem","parseFloat","desc","image","addItem","currentTarget","reset","EditItemForm","handleChange","console","log","updatedItem","updateItem","index","onChange","deleteItem","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleItems","item1","item2","item3","item4","Item","details","src","alt","disabled","addToOrder","App","Date","now","sampleItems","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","tagline","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.4ef5896b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  goToStore = event => {\n    event.preventDefault();\n    const storeName = this.myInput.current.value;\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          \n        />\n        <button type=\"submit\">Visit Store â†’</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Menu\n      </h1>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    items: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n  renderOrder = key => {\n    const item = this.props.items[key];\n    const count = this.props.order[key];\n    const isAvailable = item && item.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // Make sure the item is loaded before we continue!\n    if (!item) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {item ? item.name : \"item\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n        <li key={key}>\n          <span>\n                <span>{count}</span>\n            x {item.name}\n            {formatPrice(count * item.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const item = this.props.items[key];\n      const count = this.props.order[key];\n      const isAvailable = item && item.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * item.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddItemForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addItem: PropTypes.func\n  };\n\n  createItem = event => {\n    // 1.  stop the form from submitting\n    event.preventDefault();\n    const item = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addItem(item);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"item-edit\" onSubmit={this.createItem}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Available!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add item</button>\n      </form>\n    );\n  }\n}\n\nexport default AddItemForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditItemForm extends React.Component {\n  static propTypes = {\n    item: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateItem: PropTypes.func\n  };\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that item\n    // 1. Take a copy of the curernt item\n    const updatedItem = {\n      ...this.props.item,\n      [event.currentTarget.name]:\n        event.currentTarget.name === 'price'\n          ? parseFloat(event.currentTarget.value)\n          : event.currentTarget.value\n    };\n    this.props.updateItem(this.props.index, updatedItem);\n  };\n  render() {\n    return (\n      <div className=\"item-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.item.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.item.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.item.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.item.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.item.image}\n        />\n        <button onClick={() => this.props.deleteItem(this.props.index)}>\n          Remove item\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditItemForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With GitHub\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDRcK0s7_xMmE3aPiH92Pjg2FZSF44fsn4\",\n  authDomain: \"cafereact-ff9e1.firebaseapp.com\",\n  databaseURL: \"https://cafereact-ff9e1-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"cafereact-ff9e1\",\n  storageBucket: \"cafereact-ff9e1.appspot.com\",\n  messagingSenderId: \"946133042595\",\n  appId: \"1:946133042595:web:c19e09ee434b371ed6c616\"\n\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddItemForm from \"./AddItemForm\";\nimport EditItemForm from \"./EditItemForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    items: PropTypes.object,\n    updateItem: PropTypes.func,\n    deleteItem: PropTypes.func,\n    loadSampleItems: PropTypes.func,\n    addItem: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    //Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    //Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    //Check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    //They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.items).map(key => (\n          <EditItemForm\n            key={key}\n            index={key}\n            item={this.props.items[key]}\n            updateItem={this.props.updateItem}\n            deleteItem={this.props.deleteItem}\n          />\n        ))}\n        <AddItemForm addItem={this.props.addItem} />\n        <button onClick={this.props.loadSampleItems}>\n          Load Sample items\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst items = {\n  item1: {\n    name: \"Americano\",\n    image: \"\",\n    desc:\n      \"CaffÃ¨ Americano is a type of coffee drink prepared by diluting an espresso with hot water, giving it a similar strength to, but different flavor from, traditionally brewed coffee.\",\n    price: 100,\n    status: \"available\"\n  },\n  item2: {\n    name: \"Latte\",\n    image: \"\",\n    desc:\n      \"A latte begins with a single or double shot of espresso. This espresso is then combined with several ounces of steamed milk to create a rich, creamy beverage that has a more subtle espresso taste. The typical ratio for espresso to steamed milk is about 1-to-2. The latte is then topped with a layer of foam.\",\n    price: 150,\n    status: \"available\"\n  },\n  item3: {\n    name: \"Cappuccino\",\n    image: \"\",\n    desc:\n      \"A cappuccino starts with a bottom layer of one or two shots of espresso, then alayer of steamed milk, followed by a layer of a thick and airy layer of foam to lend the drink a luxurious velvety texture.\",\n    price: 150,\n    status: \"available\"\n  },\n  item4: {\n    name: \"Mocha\",\n    image: \"\",\n    desc:\n      \"A mocha is similar to our Latte, but the steamed milk is blended with chocolate to create a sweet, delectable coffee.\",\n    price: 150,\n    status: \"available\"\n  }\n  \n};\n\nexport default items;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Item extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n    index: PropTypes.string\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-item\">\n        <img src={image} alt={name} />\n        <h3 className=\"item-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Item;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleItems from \"../sample-items\";\nimport Item from \"./Item\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    items: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/items`, {\n      context: this,\n      state: \"items\"\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addItem = item => {\n    // 1. Take a copy of the existing state\n    const items = { ...this.state.items };\n    // 2. Add our new item to that items variable\n    items[`item${Date.now()}`] = item;\n    // 3. Set the new items object to state\n    this.setState({ items });\n  };\n\n  updateItem = (key, updatedItem) => {\n    // 1. Take a copy of the current state\n    const items = { ...this.state.items };\n    // 2. Update that state\n    items[key] = updatedItem;\n    // 3. Set that to state\n    this.setState({ items });\n  };\n\n  deleteItem = key => {\n    // 1. take a copy of state\n    const items = { ...this.state.items };\n    // 2. update the state\n    items[key] = null;\n    // 3.  update state\n    this.setState({ items });\n  };\n\n  loadSampleItems = () => {\n    this.setState({ items: sampleItems });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove that itemf from order\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Cafe Puca\" />\n          <ul className=\"items\">\n            {Object.keys(this.state.items).map(key => (\n              <Item\n                key={key}\n                index={key}\n                details={this.state.items[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          items={this.state.items}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addItem={this.addItem}\n          updateItem={this.updateItem}\n          deleteItem={this.deleteItem}\n          loadSampleItems={this.loadSampleItems}\n          items={this.state.items}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!?!!!!1111</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}